{
  "name": "Circus",
  "tagline": "An event-driven IRC framework written in C",
  "body": "Circus: An event-driven IRC framework written in C\r\n==================================================\r\n\r\n[![Build Status](https://secure.travis-ci.org/nacx/circus.png)](http://travis-ci.org/nacx/circus)\r\n\r\nCircus is an event-driven IRC framework written in ANSI C that provides a simple\r\nway to write IRC clients in pure C. Its main purpose is to provide a base\r\nto write IRC bots, but it may be extended to implement fully-featured IRC\r\nclients.\r\n\r\n\r\nCompiling Circus\r\n----------------\r\n\r\nTo compile Circus, you can simply run:\r\n\r\n    make\r\n    \r\nIf you want to enable debug messages, you can also compile Circus with debug support. It might\r\nbe too verbose, so you'd better use it just during development:\r\n\r\n    make DEBUG=1\r\n\r\nThis will compile the Circus library and build all the examples in the *examples* directory, so\r\nyou can start playing with them. It is a good starting point to modify the existing examples and\r\nmake them do some cool stuff :)\r\n\r\nBefore you start coding, it is usually a good idea to run the unit tests. This way you will make\r\nsure everything is working as expected:\r\n\r\n    make test\r\n\r\nIf you want to install the library, you can do it as usual. It will be installed by default in\r\n/usr/local, but you can customize the installation directory by adding the *PREFIX* parameter:\r\n\r\n    make install                       # Installs Circus in /usr/local\r\n    make install PREFIX=<install dir>  # Installs Circus in <install dir>\r\n\r\n\r\nTesting performance\r\n--------------------\r\n\r\nIf you want to test performance, you can run the little benchmark tool as follows:\r\n\r\n    cd src/test\r\n    ./circus-bnchk 1000000\r\n\r\nThis will generate and process the provided number of events (one million in this example) and\r\nprint some metrics, such as the average time spent processing each event or the total execution\r\ntime.\r\n\r\n\r\nBuilding Circus based applications\r\n----------------------------------\r\n\r\nTo build your own Circus application, you can take a look at the *examples* folder.\r\nThere you will find the `Makefile.example` file that you can copy and modify to build\r\nyour application. The example Makefile assumes that you installed Circus in a default location\r\n(such as /usr or /usr/local); if you installed it in a different place, you may need to configure\r\nthe `CFLAGS` and the `LDFLAGS` variables accordingly.\r\n\r\nWhen including the Circus header files in your source code files, you can include them as follows:\r\n\r\n    #include <circus/irc.h>\r\n\r\nThe code examples include the library in a different way, because they point to the library in the\r\ncompilation directory. The common pattern is, however, to have the Circus library installed in your\r\nsystem and reference the headers files as shown above.\r\n\r\nAlso take into account that circus uses POSIX threads to dispatch events to the user defined callbacks.\r\nMake sure you link the `pthread` library when building your application.\r\n\r\n\r\nHow to contribute\r\n-----------------\r\n\r\nContributions are always welcome. Feel free to share your code!\r\n \r\n * Fork the project.\r\n * Create a topic branch for your feature or bug fix.\r\n * Develop in the just created topic branch.\r\n * Add tests for your changes. This is important so I don't break them in a future version unintentionally.\r\n * Commit.\r\n * Rebase to the latest upstream version to make sure your topic branch is up to date.\r\n * Send me a pull request.\r\n\r\n\r\nIssue Tracking\r\n--------------\r\n\r\nIf you find any issue or want to ask for a feature, please submit your request to the\r\n[Bug tracking system](https://github.com/nacx/circus/issues) and I'll do my best to fix/add it.\r\n\r\n\r\nLicense\r\n-------\r\n\r\nThis sowftare is licensed under the MIT license. See LICENSE file for details.\r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}